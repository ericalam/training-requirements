library(ggpubr)
library(moments)
library(rstatix)
library(datarium)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)
dataset <- read_csv(here::here("data", params$data), col_names = TRUE)
plot(LM, 1)
complete_rec <- na.exclude(dataset)
LM <- lm(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec)
plot(LM, 1)
resid_data <- resid(LM)
qqnorm(resid_data, pch = 1, frame = FALSE)
qqline(resid_data)
ggdensity(resid_data, x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(resid_data, aes(x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2)) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
complete_rec %>%
group_by(continent) %>%
identify_outliers(`Energy use (kg of oil equivalent per capita)`) %>%
select(continent, is.outlier, is.extreme)
complete_rec$`Energy use (kg of oil equivalent per capita)` <- log10(complete_rec$`Energy use (kg of oil equivalent per capita)`)
complete_rec %>%
group_by(continent) %>%
identify_outliers(`Energy use (kg of oil equivalent per capita)`) %>%
select(continent, is.outlier, is.extreme)
anova(LM)
summary(LM)
ggqqplot(residuals(LM))
ggqqplot(complete_rec, "Energy use (kg of oil equivalent per capita)", facet.by = "continent")
complete_rec %>%
group_by(continent) %>%
identify_outliers(`Energy use (kg of oil equivalent per capita)`) %>%
select(continent, is.outlier, is.extreme)
kableExtra::kbl(xtr_outliers) %>%
kableExtra::kable_styling("hover")
xtr_outliers <- complete_rec %>%
group_by(continent) %>%
identify_outliers(`Energy use (kg of oil equivalent per capita)`) %>%
select(continent, is.outlier, is.extreme)
kableExtra::kbl(xtr_outliers) %>%
kableExtra::kable_styling("hover")
plot(LM, 1)
complete_rec %>% levene_test(`Energy use (kg of oil equivalent per capita)` ~ continent)
complete_rec$`Energy use (kg of oil equivalent per capita)` <- log10(complete_rec$`Energy use (kg of oil equivalent per capita)`)
complete_rec %>% levene_test(`Energy use (kg of oil equivalent per capita)` ~ continent)
library(readr)
library(dplyr)
library(ggplot2)
library(knitr)
library(ggthemes)
library(plotly)
library(ggpubr)
library(moments)
library(rstatix)
library(datarium)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)
ggdensity(resid_data$"Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(complete_rec, x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
complete_rec$`Energy use (kg of oil equivalent per capita)` <- log10(complete_rec$`Energy use (kg of oil equivalent per capita)`)
# density plot of residuals
ggdensity(complete_rec, x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
?oneway.test
?anova
complete_rec <- na.exclude(dataset)
ggdensity(complete_rec, x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
summary(LM)
summary(LM)
oneway.test(LM, var.equal = FALSE)
summary(LM)
oneway.test(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec, var.equal = FALSE)
skewness(complete_rec$`Energy use (kg of oil equivalent per capita)`)
log_complete_rec <- log10(complete_rec$`Energy use (kg of oil equivalent per capita)`)
skewness(log_complete_rec$`Energy use (kg of oil equivalent per capita)`)
skewness(complete_rec$`Energy use (kg of oil equivalent per capita)`)
log_complete_rec <- log10(complete_rec$`Energy use (kg of oil equivalent per capita)`)
skewness(log_complete_rec)
ggdensity(log_complete_rec, x = "Energy use (kg of oil equivalent per capita)", color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
ggdensity(log_complete_rec, color = "red", fill = "orange", alpha = 0.2) +
scale_x_continuous() +
stat_overlay_normal_density(color = "red", linetype = "dashed")
View(complete_rec)
View(complete_rec)
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
mutate(diff_yr = Year - lag(Year),
diff_life_expect = `Life expectancy at birth, total (years)` - lag(`Life expectancy at birth, total (years)`),
rate_per_life = (diff_life_expect / diff_yr)/lag(`Life expectancy at birth, total (years)`) * 100) %>%
summarize(avg_rate_life_expect = mean(rate_per_life, na.rm = TRUE)) %>%
top_n(5, avg_rate_life_expect)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
mutate(diff_yr = Year - lag(Year),
diff_life_expect = `Life expectancy at birth, total (years)` - lag(`Life expectancy at birth, total (years)`)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
mutate(diff_yr = Year - lag(Year),
diff_life_expect = `Life expectancy at birth, total (years)` - lag(`Life expectancy at birth, total (years)`))
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
mutate(diff_yr = Year - lag(Year),
diff_life_expect = `Life expectancy at birth, total (years)` - lag(`Life expectancy at birth, total (years)`),
rate_per_life = (diff_life_expect / diff_yr)/lag(`Life expectancy at birth, total (years)`) * 100) %>%
summarize(avg_rate_life_expect = mean(rate_per_life, na.rm = TRUE))
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
mutate(total_life = sum(`Life expectancy at birth, total (years)`)/(last(Year)-first(Year))) %>%
top_n(5, total_life)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
summarize(total_life = sum(`Life expectancy at birth, total (years)`)/(last(Year)-first(Year))) %>%
top_n(5, total_life)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
summarize(total_life = sum(`Life expectancy at birth, total (years)`)/(first(Year)-last(Year))) %>%
top_n(5, total_life)
gapminder_life_expect
gapminder_life_expect <- dataset %>%
filter(Year > 1962) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
summarize(total_life = (last(`Life expectancy at birth, total (years)`)-first(`Life expectancy at birth, total (years)`))/(last(Year)-first(Year))) %>%
top_n(5, total_life)
gapminder_life_expect
?skewness
skewness.test
0.002547627 + 0.001087189*0
0.002547627 + 0.001087189*7
0.01015795 / 0.002547627
3.5179 / 0.1054
library(readr)
library(dplyr)
library(ggplot2)
library(knitr)
library(ggthemes)
library(plotly)
library(ggpubr)
library(moments)
library(rstatix)
library(datarium)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)
anova(LM)
summary(LM)
unequal <- oneway.test(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec, var.equal = FALSE)
summary(unequal)
oneway.test(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec, var.equal = FALSE)
summary(LM)
oneway.test(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec, var.equal = FALSE)
?t.test
-3.77714 + 0.14486*26
exp(-0.01078)
-3.77714/0.14486
exp(0.14486)
LI = c(8,8,10,10,12,12,12,14,14,14,16,16,16,18,20,20,20,22,22,24,26,28,32,34,38,38,38)
quantile(LI)
(-3.77714+0.14486*13
library(readr)
-3.77714+0.14486*13
exp(-1.89396)
1+0.1504747
0.1504747/(1.150475)
y <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,1,1,1,0)
modelLI = glm(y ~ LI, family=binomial)
quantile(modelLI)
modelLI = summary(glm(y ~ LI, family=binomial))
quantile(modelLI)
?quantile
modelLI = lm(y ~ LI, family=binomial)
quantile(modelLI)
LI <- c(8,8,10,10,12,12,12,14,14,14,16,16,16,18,20,20,20,22,22,24,26,28,32,34,38,38,38)
1+ 0.1504747
0.1504747/1.150475
quantile(LI)
exp⁡(-3.77714+0.14486*25)
-3.77714+0.14486*25
exp(-0.15564)
0.8558672/(1+0.8558672)
0.4611683 - 0.1307935
LI <- c(16,18,20,20,24,26,32,34,38,38)
quantile(LI)
View(LM)
library(readr)
library(dplyr)
library(ggplot2)
library(knitr)
library(ggthemes)
library(plotly)
library(ggpubr)
library(moments)
library(rstatix)
library(datarium)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)
summary(LM)
oneway.test(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec, var.equal = FALSE)
str(LM)
?lm
?summary
names(LM)
sum <- summary(LM)
names(sum)
summary()
summary
summary_LM <- summary(LM)
summary_LM
str(summary_LM)
names(LM)
names(summary_LM)
View(summary_LM)
View(summary_LM)
View(summary_LM)
summary_LM
summary_LM[["cov.unscaled"]]
summary_LM[["coefficients"]]
dataset_imports_year <- complete_rec %>%
filter(Year > params$imports_year, continent %in% c(params$continent1, params$continent2)) %>%
select(Year, continent, `Imports of goods and services (% of GDP)`)
dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
dataset_imports_year <- complete_rec %>%
filter(Year > params$imports_year, continent %in% c("params$continent1", "params$continent2")) %>%
select(Year, continent, `Imports of goods and services (% of GDP)`)
# summary stats
dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
dataset_imports_year <- complete_rec %>%
filter(Year > params$imports_year, continent %in% c(params$continent1, params$continent2)) %>%
select(Year, continent, `Imports of goods and services (% of GDP)`)
dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
dataset_imports_year <- complete_rec %>%
filter(Year > params$imports_year, continent %in% c(params$continent1, params$continent2)) %>%
select(Year, continent, `Imports of goods and services (% of GDP)`)
dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
# summary stats
imports_stats <- dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
names(imports_stats)
imports_stats
t.test <- dataset_imports_year %>%
t_test(`Imports of goods and services (% of GDP)` ~ continent) %>%
add_significance()
t.test
t.test
dataset_imports_year %>% cohens_d(`Imports of goods and services (% of GDP)` ~ continent, var.equal = FALSE)
d <- dataset_imports_year %>% cohens_d(`Imports of goods and services (% of GDP)` ~ continent, var.equal = FALSE)
d
View(imports_stats)
?ggqqplot
str(dataset_pop)
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank)) %>%
arrange(desc(avg_rank))
dataset_pop
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank))
dataset_pop
View(dataset_pop)
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank)) %>%
arrange(desc(avg_rank))
dataset_pop
View(dataset_pop)
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank))
dataset_pop
View(dataset_pop)
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank)) %>%
arrange(desc(avg_rank))
dataset_pop
View(dataset_pop)
View(dataset_pop)
str(gapminder)
View(gapminder_life_expect)
View(complete_rec)
str(complete_rec)
??ggplotly
library(RColorBrewer)
display.brewer.all()
?scale_color_brewer
?ggplotly
??ggplotly
??scale_fill_distiller
palette(scale_fill_distiller)
?ggpubr
??ggpubr
??datarium
??rstatix
?cohens_d
??cohens_d
??moments
??ggthemes
??RColorBrewer
??readr
# libraries
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(rstatix)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)
# read in data
dataset <- read_csv(here::here("data", params$data), col_names = TRUE)
# apply year filter and plot
dataset_year <- dataset %>%
filter(Year == params$year)
ggplot(dataset_year, aes(gdpPercap, `CO2 emissions (metric tons per capita)`)) +
list(geom_point(),
scale_x_log10(),
scale_y_log10(),
geom_smooth(method = "lm", color = "gray", se = FALSE),
theme_classic(),
labs(
caption = paste("Source from", params$data),
title = paste("CO2 emissions by GDP per capita in", params$year),
x = "GDP per capita")
)
# find Pearson correlation and its p-value
cor_res <- cor.test(dataset_year$gdpPercap, dataset_year$`CO2 emissions (metric tons per capita)`, method = "pearson")
# find year with the most positive correlation value
dataset_strongest_cor <- dataset %>%
group_by(Year) %>%
select(gdpPercap, `CO2 emissions (metric tons per capita)`, Year) %>%
summarize(corr = cor(gdpPercap, `CO2 emissions (metric tons per capita)`, use = "complete.obs")) %>%
arrange(desc(corr))
# filter to appropriate year
dataset_strongest_cor_res <- dataset %>%
filter(Year == dataset_strongest_cor$Year[1])
# show results from above in a table
kableExtra::kbl(dataset_strongest_cor) %>%
kableExtra::kable_styling("hover")
# interactive scatter plot of year with strongest cor
ggplotly(ggplot(dataset_strongest_cor_res, aes(gdpPercap, `CO2 emissions (metric tons per capita)`, size = pop, color = continent)) +
list(geom_point(),
scale_x_log10(),
scale_y_log10(),
geom_smooth(method = "lm", se = FALSE),
theme_classic(),
scale_color_brewer(palette = "Set2"),
labs(
caption = paste("Source from", params$data),
title = paste("CO2 emissions by GDP per capita in",
dataset_strongest_cor$Year[1]),
x = "GDP per capita")
)
)
# build linear model and perform one-way ANOVA
complete_rec <- na.exclude(dataset)
LM <- lm(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec)
summary_LM <- summary(LM)
# call final p-value displayed at the end of summary()
fstat <- summary_LM$fstatistic
p_value_LM <- pf(fstat[1], fstat[2], fstat[3], lower.tail = FALSE)
# boxplot data
ggplotly(ggplot(complete_rec, aes(continent, `Energy use (kg of oil equivalent per capita)`, color = continent)) +
geom_boxplot() +
theme_classic() +
scale_color_brewer(palette = "Set2") +
labs(
x = "Continent",
caption = paste("Source from", params$data),
title = "Energy use by continent"
)
)
# filter by imports_year and chosen continents
dataset_imports_year <- complete_rec %>%
filter(Year > params$imports_year, continent %in% c(params$continent1, params$continent2)) %>%
select(Year, continent, `Imports of goods and services (% of GDP)`)
# welch t test
t.test <- dataset_imports_year %>%
t_test(`Imports of goods and services (% of GDP)` ~ continent) %>%
add_significance()
# cohen's d
d <- dataset_imports_year %>% cohens_d(`Imports of goods and services (% of GDP)` ~ continent, var.equal = FALSE)
# summary stats
imports_stats <- dataset_imports_year %>%
group_by(continent) %>%
get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")
# boxplot data
ggplotly(ggplot(dataset_imports_year, aes(continent, `Imports of goods and services (% of GDP)`, color = continent)) +
geom_boxplot() +
theme_classic() +
scale_color_brewer(palette = "Set2") +
labs(
x = "Continent",
caption = paste("Source from", params$data),
title = paste("Imports of goods and services for", params$continent1, "and", params$continent2)
)
)
# filter data for largest avg ranking
dataset_pop <- dataset %>%
group_by(Year) %>%
select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>%
slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
group_by(`Country Name`) %>%
mutate(avg_rank = mean(rank)) %>%
arrange(desc(avg_rank))
# plot top 5 pop density avg ranking countries
ggplotly(ggplot(dataset_pop, aes(x = reorder(`Country Name`, -avg_rank), y = avg_rank, fill = `Population density (people per sq. km of land area)`, text = paste("Average rank:", avg_rank,"<br>", "Year:", Year))) +
scale_fill_distiller(palette = "BrBG") +
list(geom_col(),
theme_classic(),
theme(plot.title = element_text(size = 10.5),
axis.text.x = element_text(angle = 45, hjust = 0)),
labs(
caption = paste("Source from", params$data),
x = "Country name",
y = "Average ranking",
title = "Top 5 countries with the highest population density average ranking from 1967 to 2007")
), tooltip = c("text", "fill")
)
# filter data for year and find life expectancy rate
life_expect <- dataset %>%
filter(Year > params$year) %>%
arrange(Year) %>%
group_by(`Country Name`) %>%
summarize(total_life = (last(`Life expectancy at birth, total (years)`)-first(`Life expectancy at birth, total (years)`))/(last(Year)-first(Year))) %>%
top_n(5, total_life) %>%
arrange(desc(total_life))
# plot 5 countries with the greatest increases in life expectancy rate
ggplotly(ggplot(life_expect, aes(x = reorder(`Country Name`, -total_life), y = total_life, text = paste("Increased life expectancy rate:", total_life))) +
list(geom_col(fill = "gray"),
theme_classic(),
theme(plot.title = element_text(size = 10.5),
axis.text.x = element_text(angle = 45, hjust = 0)),
labs(
caption = paste("Source from", params$data),
x = "Country name",
y = "Increase in life expectancy rate",
title = paste("Top 5 countries with the greatest increase in life expectancy at birth since", params$year))
), tooltip = c("text")
)
install.packages("renv")
renv::init()
renv::snapshot()
