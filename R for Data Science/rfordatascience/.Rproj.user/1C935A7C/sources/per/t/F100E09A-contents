---
title: "R for Data Science"
author: "Erica Lam"
date: "`r format(Sys.time(),'%Y %B %d')`"
output: 
  html_document:
    toc: true
    collapsed: false
    toc_float: true
    number_sections: true
    theme: paper
params:
  data: gapminder_clean.csv
  year: 1962
  imports_year: 1990
  continent1: Europe
  continent2: Asia

---

```{r setup, include = FALSE}
# libraries 
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(rstatix)

knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, echo=FALSE)

```

# Analyses by continent

## CO2 emissions by GDP per capita 
The following scatter plot compares `gdpPercap` and `'CO2 emissions (metric tons per capita)'` in `r params$year`. 

```{r scatter_and_cor}
# read in data
dataset <- read_csv(here::here("data", params$data), col_names = TRUE)

# apply year filter and plot
dataset_year <- dataset %>%
  filter(Year == params$year) 

ggplot(dataset_year, aes(gdpPercap, `CO2 emissions (metric tons per capita)`)) + 
  list(geom_point(),
  scale_x_log10(),
  scale_y_log10(),
  geom_smooth(method = "lm", color = "gray", se = FALSE),
  theme_classic(), 
  labs(
    caption = paste("Source from", params$data),
    title = paste("CO2 emissions by GDP per capita in", params$year),
       x = "GDP per capita")
  )

# find Pearson correlation and its p-value
cor_res <- cor.test(dataset_year$gdpPercap, dataset_year$`CO2 emissions (metric tons per capita)`, method = "pearson")
```

Using the Pearson correlation test, the correlation between the two variables was found to be <strong>`r cor_res$estimate`</strong> (p = <strong>`r cor_res$p.value`</strong>). 

```{r strongest_cor}
# find year with the most positive correlation value
dataset_strongest_cor <- dataset %>%
  group_by(Year) %>%
  select(gdpPercap, `CO2 emissions (metric tons per capita)`, Year) %>%
  summarize(corr = cor(gdpPercap, `CO2 emissions (metric tons per capita)`, use = "complete.obs")) %>%
  arrange(desc(corr))

# filter to appropriate year
dataset_strongest_cor_res <- dataset %>%
  filter(Year == dataset_strongest_cor$Year[1])
```

The year with the strongest correlation, however, was determined to be in <strong>`r dataset_strongest_cor$Year[1]`</strong>, as shown in the table (left). A scatter plot (right) depicts the relationship of the two variables in this year by continent.

<div class = "row">
<div class = "col-md-2">
```{r strongest_cor_table}
# show results from above in a table
kableExtra::kbl(dataset_strongest_cor) %>% 
  kableExtra::kable_styling("hover") 
```
</div>

<div class = "col-md-6">
```{r strongest_cor_plot}
# interactive scatter plot of year with strongest cor
ggplotly(ggplot(dataset_strongest_cor_res, aes(gdpPercap, `CO2 emissions (metric tons per capita)`, size = pop, color = continent)) + 
  list(geom_point(),
  scale_x_log10(),
  scale_y_log10(),
  geom_smooth(method = "lm", se = FALSE),
  theme_classic(), 
  scale_color_brewer(palette = "Set2"),
  labs(
    caption = paste("Source from", params$data), 
    title = paste("CO2 emissions by GDP per capita in",
                  dataset_strongest_cor$Year[1]),
    x = "GDP per capita") 
  )
)
```
</div>
</div>

## Energy use

```{r energy_continent_model}
# build linear model and perform one-way ANOVA
complete_rec <- na.exclude(dataset)
LM <- lm(`Energy use (kg of oil equivalent per capita)` ~ continent, data = complete_rec)
summary_LM <- summary(LM)

# call final p-value displayed at the end of summary()
fstat <- summary_LM$fstatistic
p_value_LM <- pf(fstat[1], fstat[2], fstat[3], lower.tail = FALSE)
```

One-way ANOVA results determined there was a statistically significant difference [<strong>F(`r summary_LM$fstatistic[2]`, `r summary_LM$fstatistic[3]`)</strong> = <strong>`r summary_LM$fstatistic[1]`</strong>, p = <strong>`r p_value_LM`</strong>] in `Energy use (kg of oil equivalent per capita)` between `continents`. Because the adjusted R-squared was <strong>`r summary_LM$adj.r.squared`</strong>, there was a weak linear relation between the treatment levels and response.

```{r energy_continent_plot}
# boxplot data
ggplotly(ggplot(complete_rec, aes(continent, `Energy use (kg of oil equivalent per capita)`, color = continent)) +
  geom_boxplot() +
  theme_classic() +
  scale_color_brewer(palette = "Set2") +
  labs(
    x = "Continent",
    caption = paste("Source from", params$data),
    title = "Energy use by continent"
  ) 
)
```

## Imports between `r params$continent1` and `r params$continent2`

```{r imports_res}
# filter by imports_year and chosen continents
dataset_imports_year <- complete_rec %>%
  filter(Year > params$imports_year, continent %in% c(params$continent1, params$continent2)) %>%
  select(Year, continent, `Imports of goods and services (% of GDP)`)

# welch t test
t.test <- dataset_imports_year %>% 
  t_test(`Imports of goods and services (% of GDP)` ~ continent) %>%
  add_significance()

# cohen's d
d <- dataset_imports_year %>% cohens_d(`Imports of goods and services (% of GDP)` ~ continent, var.equal = FALSE)

# summary stats
imports_stats <- dataset_imports_year %>%
  group_by(continent) %>%
  get_summary_stats(`Imports of goods and services (% of GDP)`, type = "mean_sd")

```

In the years after `r params$imports_year`, the mean ``Imports of goods and services (% of GDP)`` in `r params$continent1` and `r params$continent2` was <strong>`r imports_stats$mean[2]`</strong> (SD = <strong>`r imports_stats$sd[2]`</strong>) and <strong>`r imports_stats$mean[1]`</strong> (SD = <strong>`r imports_stats$sd[1]`</strong>), respectively. A Welch two-sample t-test demonstrated there was no statistically significant difference [<strong>t(`r t.test$df`)</strong> = <strong>`r t.test$statistic`</strong>, p = <strong>`r t.test$p`</strong>, d = <strong>`r d$effsize`</strong>], meaning the means of the two populations were the same.

Note: To meet the normality assumption not met in the original data, a sqrt transformation was attempted. While the transformation improved the distribution of the data to normality, it provided no meaningful differences as it led to the same conclusion. Therefore, the analysis was done on the original data.

```{r imports_plot}
# boxplot data
ggplotly(ggplot(dataset_imports_year, aes(continent, `Imports of goods and services (% of GDP)`, color = continent)) +
  geom_boxplot() +
  theme_classic() +
  scale_color_brewer(palette = "Set2") +
  labs(
    x = "Continent",
    caption = paste("Source from", params$data),
    title = paste("Imports of goods and services for", params$continent1, "and", params$continent2)
  )
)
```

# Analyses by country

## Highest population density

```{r highest_pop_density_res}
# filter data for largest avg ranking
dataset_pop <- dataset %>% 
  group_by(Year) %>% 
  select(Year, `Country Name`, `Population density (people per sq. km of land area)`) %>% 
  slice_max(n = 5, `Population density (people per sq. km of land area)`) %>%
  mutate(rank = dense_rank(desc(`Population density (people per sq. km of land area)`))) %>%
  group_by(`Country Name`) %>%
  mutate(avg_rank = mean(rank)) %>%
  arrange(desc(avg_rank))
```

The country with the highest average ranking of <strong>`r dataset_pop$avg_rank[1]`</strong> in `'Population density (people per sq. km of land area)'` across all years is <strong>`r dataset_pop$'Country Name'[1]`</strong>, followed by <strong>`r dataset_pop$'Country Name'[11]`</strong> with an average ranking of <strong>`r dataset_pop$avg_rank[11]`</strong>.

```{r highest_pop_density_plot}
# plot top 5 pop density avg ranking countries
ggplotly(ggplot(dataset_pop, aes(x = reorder(`Country Name`, -avg_rank), y = avg_rank, fill = `Population density (people per sq. km of land area)`, text = paste("Average rank:", avg_rank,"<br>", "Year:", Year))) + 
  scale_fill_distiller(palette = "BrBG") +
  list(geom_col(),
  theme_classic(), 
  theme(plot.title = element_text(size = 10.5), 
        axis.text.x = element_text(angle = 45, hjust = 0)),
  labs(
    caption = paste("Source from", params$data),
    x = "Country name",
    y = "Average ranking",
    title = "Top 5 countries with the highest population density average ranking from 1967 to 2007") 
  ), tooltip = c("text", "fill")
)
```

## Increased rate of life expectancy at birth

```{r highest_life_expect_res}
# filter data for year and find life expectancy rate
life_expect <- dataset %>%
  filter(Year > params$year) %>%
  arrange(Year) %>%
  group_by(`Country Name`) %>%
  summarize(total_life = (last(`Life expectancy at birth, total (years)`)-first(`Life expectancy at birth, total (years)`))/(last(Year)-first(Year))) %>%
  top_n(5, total_life) %>%
  arrange(desc(total_life))

```

The country with the greatest increase in life expectancy at birth since `r params$year` is <strong>`r life_expect$'Country Name'[1]`</strong> (<strong>`r life_expect$total_life[1]`</strong>), with <strong>`r life_expect$'Country Name'[2]`</strong> (<strong>`r life_expect$total_life[2]`</strong>) coming second.

```{r highest_life_expect_plot}
# plot 5 countries with the greatest increases in life expectancy rate
ggplotly(ggplot(life_expect, aes(x = reorder(`Country Name`, -total_life), y = total_life, text = paste("Increased life expectancy rate:", total_life))) + 
  list(geom_col(fill = "gray"),
  theme_classic(), 
  theme(plot.title = element_text(size = 10.5), 
        axis.text.x = element_text(angle = 45, hjust = 0)),
  labs(
    caption = paste("Source from", params$data),
    x = "Country name",
    y = "Increase in life expectancy rate",
    title = paste("Top 5 countries with the greatest increase in life expectancy at birth since", params$year))
  ), tooltip = c("text")
)
```